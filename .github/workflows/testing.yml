name: Automated tests

on:
  pull_request:
  push:
    branches:
      - main

env:
  PHP_VERSION: 8
  NODE_VERSION: 15.x

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run lint:check

  build-frontend:
    name: Build frontend
    needs: [lint]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2.1.4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run production

  test-backend:
    name: Test backend
    needs: [lint]
    runs-on: ubuntu-20.04
    services:
      database:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: votesystem-ci
          POSTGRES_PASSWORD: gh-actions-votesystem
          POSTGRES_USER: gh-actions
        volumes:
          - db-data:/var/lib/postgresql/data
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug
          extensions: mbstring, intl, pdo-pgsql
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: |
          cp .env.ci .env
          composer install -q --no-ansi --no-interaction --no-suggest --no-progress --prefer-dist --no-scripts
          php artisan key:generate
      - run: vendor/bin/phpunit --do-not-cache-result --no-interaction --disallow-todo-tests
